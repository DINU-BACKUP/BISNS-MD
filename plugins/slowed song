const { cmd } = require("../command");
const config = require("../settings");
const yts = require("yt-search");
const { fetchJson } = require("../lib/functions");

cmd(
  {
    pattern: "slowed",
    alias: ["slowerb"],
    desc: "Send song as PTT with styled details and thumbnail",
    category: "download",
    react: "üéß",
    filename: __filename,
  },
  async (robin, mek, m, { q, reply }) => {
    try {
      if (!q) return reply("*‡∂î‡∂∫‡∑è‡∂Ω‡∑è ‡∂ú‡∑ì‡∂≠ ‡∂±‡∂∏‡∂ö‡∑ä ‡∑Ñ‡∑ù YouTube ‡∂Ω‡∑í‡∂±‡∑ä‡∂ö‡∑ä ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±...!*");

      const search = await yts(q);
      if (!search.videos.length) return reply("*‡∂ú‡∑ì‡∂≠‡∂∫ ‡∑Ñ‡∂∏‡∑î‡∂±‡∑ú‡∑Ä‡∑î‡∂´‡∑è... ‚ùå*");

      const data = search.videos[0];
      const title = data.title;
      const timestamp = data.timestamp;
      const ago = data.ago;
      const ytUrl = data.url;
      const thumbnail = data.thumbnail;
      const views = data.views;

      // API Call
      const api = `https://manul-official-new-api-site.vercel.app/convert?mp3=${encodeURIComponent(
        ytUrl
      )}&apikey=Manul-Official`;

      const res = await fetchJson(api);

      if (!res?.status || !res?.data?.url) {
        return reply("‚ùå ‡∂ú‡∑ì‡∂≠‡∂∫ ‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∑Ö ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö. ‡∑Ä‡∑ô‡∂±‡∂≠‡∑ä ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂ã‡∂≠‡∑ä‡∑É‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±!");
      }

      const audioUrl = res.data.url;

      // üü¢ Exact styled caption (as you showed)
      const styledCaption = `
\`ü´ê ·¥õ…™·¥õ ü·¥á :\` *${title}*

\`ü™≤ ·¥†…™·¥á·¥°Íú± :\` *${views}*          \`üîñ·¥ú·¥ò ü·¥è·¥Ä·¥Ö·¥á·¥Ö :\` *${ago}*

\`00:00 ‚îÄ‚îÄ‚îÄ‚îÄ‚óã‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ${timestamp}\`


> ü´ü *Slowed ‡∑É‡∑í‡∂±‡∑ä‡∂Ø‡∑î üçÉüòΩüíó"*
`;

      // Send image + caption
      await robin.sendMessage(
        config.SLOWED || mek.key.remoteJid,
        {
          image: { url: thumbnail },
          caption: styledCaption,
        },
        { quoted: mek }
      );

      // Send audio as PTT
      await robin.sendMessage(
        config.SLOWED || mek.key.remoteJid,
        {
          audio: { url: audioUrl },
          mimetype: "audio/mpeg",
          ptt: true,
        },
        { quoted: mek }
      );

      // Confirmation to sender
      await robin.sendMessage(
        mek.key.remoteJid,
        {
          text: `‚úÖ *"${title}"* ‡∂±‡∂∏‡∑ä ‡∂ú‡∑ì‡∂≠‡∂∫ ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä *${config.BOTNAME || "channel ‡∂ë‡∂ö‡∂ß"}* ‡∂∫‡∑Ä‡∂Ω‡∑è ‡∂≠‡∑í‡∂∫‡∑ô‡∂±‡∑ä‡∂±‡∑ô.`,
        },
        { quoted: mek }
      );
    } catch (e) {
      console.error(e);
      reply("*üòì ‡∂ã‡∂´‡∑î‡∑É‡∑î‡∂∏‡∑ä ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑í! ‡∂¥‡∑É‡∑î‡∑Ä ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂ã‡∂≠‡∑ä‡∑É‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.*");
    }
  }
);
